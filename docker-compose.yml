# docker-compose.yml

version: '3.8'

services:
  # Next.jsアプリケーションサービス
  next-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000" # ホストの3000番ポートをコンテナの3000番ポートにマッピング
    environment:
      MONGODB_URI: mongodb://localhost:27017

      NEXTAUTH_URL: a 
      NEXTAUTH_SECRET: a 
      GOOGLE_CLIENT_ID: a 
      GOOGLE_CLIENT_SECRET: a      
    depends_on:
      - mongo # mongoサービスが起動してからnext-appサービスを起動
    # 開発時にソースコードの変更を即時反映したい場合は以下のvolumesセクションを有効化します。
    # ただし、本番環境ではビルド済みのイメージを使用するため、通常は不要です。
    # volumes:
    #   - .:/app # 現在のディレクトリをコンテナの/appにマウント
    #   - /app/node_modules # ホストのnode_modulesで上書きされないようにする
    #   - /app/.next # ホストの.nextで上書きされないようにする
    restart: unless-stopped

  # MongoDBサービス
  mongo:
    image: mongo:latest # 最新のMongoDBイメージを使用 (特定のバージョンを指定することも推奨)
    ports:
      - "27017:27017" # ホストの27017番ポートをコンテナの27017番ポートにマッピング
    volumes:
      - mongo-data:/data/db # 名前付きボリュームを使用してデータを永続化
    # 必要に応じてMongoDBの認証情報を設定
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: examplepassword
    restart: unless-stopped

volumes:
  mongo-data: # MongoDBのデータ永続化用ボリューム