import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

import { SessionProvider } from 'next-auth/react' // 追加
import { auth } from '@/auth' // App Routerで認証をサーバーから取得するためのヘルパー (auth.tsで定義)


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const session = await auth(); // サーバーサイドでセッションを取得

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {/* SessionProvider で children をラップ */}
        <SessionProvider session={session}> {/* session prop を渡す */}
          {children}
        </SessionProvider>
      </body>
    </html>
  );
}
